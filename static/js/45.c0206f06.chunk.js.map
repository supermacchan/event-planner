{"version":3,"file":"static/js/45.c0206f06.chunk.js","mappings":"oLACA,EAAyB,2B,SCGZA,EAAa,WAAO,IAADC,EAAAC,EACtBC,GAAWC,EAAAA,EAAAA,MAEjB,OACIC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAwB,QAAtBN,EAAgB,QAAhBC,EAAEC,EAASK,aAAK,IAAAN,OAAA,EAAdA,EAAgBO,YAAI,IAAAR,EAAAA,EAAI,IAAKS,MAAO,CAACC,MAAO,IAAIC,UACtDC,EAAAA,EAAAA,MAAA,UAAQC,UAAWC,EAAYC,KAAK,SAAQJ,SAAA,EACxCP,EAAAA,EAAAA,KAACY,EAAAA,IAAkB,CAACP,MAAO,CAACC,MAAO,GAAIO,OAAQ,MAAO,WAKtE,C,gICdA,EAA0B,4BAA1B,EAAkE,8BAAlE,EAA4G,8BAA5G,EAAoJ,4BAApJ,EAAwL,0BAAxL,EAAwN,wBAAxN,EAAyP,2BAAzP,EAA8R,4BAA9R,EAAkU,0BAAlU,EAAmW,yBAAnW,EAAwY,8BAAxY,EAA4a,wBAA5a,EAA2c,yBAA3c,EAAkf,gCAAlf,EAA0hB,0BAA1hB,EAA+jB,6B,SCIzjBC,EAAoB,SAACC,GAAG,OAAKC,EAAAA,EAAAA,GAAOD,EAAK,MAAO,EAEzCE,EAAa,SAAHC,GAMhB,IALHC,EAASD,EAATC,UACAC,EAAQF,EAARE,SACAC,EAAOH,EAAPG,QACAC,EAAMJ,EAANI,OAGMC,GAFIL,EAAVM,WAEmB,CACfC,QAASf,EACTgB,cAAehB,EACfiB,IAAKjB,EACLkB,WAAYlB,EACZmB,SAAUnB,EACVoB,MAAOpB,EACPqB,KAAMrB,EACNsB,UAAWtB,EACXuB,IAAKvB,EACLwB,KAAMxB,EACNK,IAAKL,EACLyB,UAAWzB,EACX0B,aAAc1B,IAGlB,OACIF,EAAAA,EAAAA,MAAA6B,EAAAA,SAAA,CAAA9B,SAAA,EACIP,EAAAA,EAAAA,KAACsC,EAAAA,GAAS,CACNC,SAAUpB,EACVqB,KAAK,SACLpB,SAAUA,EACVG,WAAYA,EACZkB,WAAY,CAAC3B,kBAAAA,MAGjBN,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAYH,SAAA,EACxBP,EAAAA,EAAAA,KAAA,UACIW,KAAK,SACLF,UAAWC,EACXgC,QAASrB,EAAQd,SACpB,YAGDP,EAAAA,EAAAA,KAAA,UACIW,KAAK,SACLF,UAAWC,EACXgC,QAASpB,EAAOf,SACnB,qBAMjB,E,wCCzDA,EAAuB,wBAAvB,EAA2D,6BAA3D,EAAgG,yBAAhG,EAAiI,yBAAjI,EAAqK,4BAArK,EAA2M,2BAA3M,EAAiP,4BAAjP,EAAwR,4BAAxR,EAAgU,6BAAhU,EAAsW,0BAAtW,EAA2Y,4BAA3Y,EAAyb,mCCa5aoC,EAAY,SAAHzB,GAAmB,IAAb0B,EAAK1B,EAAL0B,MAClB9C,GAAWC,EAAAA,EAAAA,MACX8C,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEjBC,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,GAAsCL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA3CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAClCG,GAAwBT,EAAAA,EAAAA,UAAS,IAAGU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAA7BE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACpBG,GAAwBb,EAAAA,EAAAA,UAAS,IAAGc,GAAAZ,EAAAA,EAAAA,GAAAW,EAAA,GAA7BE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACpBG,GAA0BjB,EAAAA,EAAAA,UAAS,IAAGkB,GAAAhB,EAAAA,EAAAA,GAAAe,EAAA,GAA/BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAA+BrB,EAAAA,EAAAA,UAAS,IAAGsB,GAAApB,EAAAA,EAAAA,GAAAmB,EAAA,GAApCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAC5BG,GAAgCzB,EAAAA,EAAAA,UAAS,IAAG0B,GAAAxB,EAAAA,EAAAA,GAAAuB,EAAA,GAArCE,GAAQD,EAAA,GAAEE,GAAWF,EAAA,GAC5BG,IAA0B7B,EAAAA,EAAAA,UAAS,MAAK8B,IAAA5B,EAAAA,EAAAA,GAAA2B,GAAA,GAAjCE,GAAKD,GAAA,GAAEE,GAAQF,GAAA,GAEtBG,IAAkCjC,EAAAA,EAAAA,UAAS,IAAIkC,MAAOC,IAAAjC,EAAAA,EAAAA,GAAA+B,GAAA,GAA/ChE,GAASkE,GAAA,GAAEC,GAAYD,GAAA,GAE9BE,IAA4CrC,EAAAA,EAAAA,WAAS,GAAMsC,IAAApC,EAAAA,EAAAA,GAAAmC,GAAA,GAApDE,GAAcD,GAAA,GAAEE,GAAiBF,GAAA,IAGxCG,EAAAA,EAAAA,YAAU,WACN,GAAK/C,EAAL,CAIA,IACIgD,EAQAhD,EARAgD,KACAnC,EAOAb,EAPAa,YACAgB,EAMA7B,EANA6B,SACAI,EAKAjC,EALAiC,SACAR,EAIAzB,EAJAyB,MACAR,EAGAjB,EAHAiB,KACAI,EAEArB,EAFAqB,KACA4B,EACAjD,EADAiD,MAEJvC,EAASsC,GACTlC,EAAeD,GACfK,EAAQD,GACRK,EAAQD,GACRK,EAASD,GACTK,EAAYD,GACZK,GAAYD,GACZK,GAASW,EAnBT,CAqBJ,GAAG,CAACjD,IAEJ,IAAMkD,GAAoB,SAACC,GACvB,OAAQA,EAAEC,OAAOJ,MACb,IAAK,QACDtC,EAASyC,EAAEC,OAAOC,OAClB,MACJ,IAAK,cACDvC,EAAeqC,EAAEC,OAAOC,OACxB,MACJ,IAAK,OACDnC,EAAQiC,EAAEC,OAAOC,OACjB,MACJ,IAAK,OACD/B,EAAQ6B,EAAEC,OAAOC,OACjB,MACJ,IAAK,WACD3B,EAASyB,EAAEC,OAAOC,OAClB,MACJ,IAAK,WACDvB,EAAYqB,EAAEC,OAAOC,OACrB,MACJ,IAAK,WACDnB,GAAYiB,EAAEC,OAAOC,OACrB,MACJ,QACI,OAEZ,EAgGA,OACIzF,EAAAA,EAAAA,MAAA,QAAMC,UAAWC,EAAUwF,GAAG,OAAOC,SA7BhB,SAACJ,GAMtB,GALAA,EAAEK,iBACFC,QAAQC,IAAIxG,EAASyG,UAzBF,WACnB,IACMC,EADQC,SAASC,eAAe,QAClBC,iBAAiB,wBAE/BC,EAAWC,MAAMzG,KAAKoG,GAAQM,OAAM,SAAAC,GAAC,OAAIA,EAAEd,MAAMe,MAAM,IAG7D,OAFAX,QAAQC,IAAIM,KAEPA,IACDJ,EAAOS,SAAQ,SAASC,GAEnBA,EAAMjB,MAAMe,OAGTE,EAAMC,kBAAkB,IAFxBD,EAAMC,kBAAkB,0BAIhC,KAEO,EAIf,CAMqBC,GAEjB,CAKA,IAAMC,EAlDU,WAAO,IAADC,EAatB,MAZiB,CACbpB,GAAY,QAAVoB,EAAE1E,EAAMsD,UAAE,IAAAoB,EAAAA,GAAIC,EAAAA,EAAAA,MAChB3B,KAAMvC,EACNI,YAAAA,EACAgB,SAAAA,EACAI,SAAAA,GACAR,MAAAA,EACAR,KAAAA,EACAI,KAAAA,EACA4B,MAAY,OAALZ,SAAK,IAALA,GAAAA,G,qzKAIf,CAoCqBuC,GASjB,GARAnB,QAAQC,IAAIe,GAEc,YAAtBvH,EAASyG,WACTxD,EAAS0E,EAAAA,EAAAA,YAAuBJ,IAChCK,EAAAA,GAAAA,QAAc,iCACd7E,EAAS,MAGT/C,EAASyG,WAAQ,SAAAoB,OAAc/E,EAAMsD,IAAM,CAC3C,IAAMA,EAAKtD,EAAMsD,GACjBnD,EAAS0E,EAAAA,EAAAA,YAAuB,CAACvB,GAAAA,EAAImB,SAAAA,KACrCK,EAAAA,GAAAA,QAAc,oCACd7E,EAAS,UAAD8E,OAAW/E,EAAMsD,IAC7B,CAhBA,MAFIwB,EAAAA,GAAAA,MAAY,2CAmBpB,EAGoEnH,SAAA,EAC5DC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAcH,SAAA,EAE1BC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAYH,SAAA,EACxBP,EAAAA,EAAAA,KAAA,SACIS,UAAWC,EACXkH,QAAQ,QAAOrH,SAClB,WAGDP,EAAAA,EAAAA,KAAA,SACIS,UAAWC,EACXC,KAAK,OACLuF,GAAG,QACHN,KAAK,QACLiC,QAAQ,qBACR5B,MAAO5C,EACPyE,SAAUhC,MAEd9F,EAAAA,EAAAA,KAAA,UACIW,KAAK,SACLF,UAAWC,EACXgC,QAAS,kBAAMY,EAAS,GAAG,EAAC/C,UAE5BP,EAAAA,EAAAA,KAAC+H,EAAAA,IAAO,CAAC1H,MAAO,CAACC,MAAO,GAAIO,OAAQ,YAI5CL,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAYH,SAAA,EACxBP,EAAAA,EAAAA,KAAA,SACIS,UAAWC,EACXkH,QAAQ,cAAarH,SACxB,iBAGDP,EAAAA,EAAAA,KAAA,YACIS,UAAWC,EACXC,KAAK,OACLuF,GAAG,cACHN,KAAK,cACLK,MAAOxC,EACPqE,SAAUhC,MAEd9F,EAAAA,EAAAA,KAAA,UACIW,KAAK,SACLF,UAAWC,EACXgC,QAAS,kBAAMgB,EAAe,GAAG,EAACnD,UAElCP,EAAAA,EAAAA,KAAC+H,EAAAA,IAAO,CAAC1H,MAAO,CAACC,MAAO,GAAIO,OAAQ,YAI5CL,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EACZL,MAAO,CAAC2H,SAAU,YAAYzH,SAAA,EAE9BP,EAAAA,EAAAA,KAAA,SACIS,UAAWC,EACXkH,QAAQ,OAAMrH,SACjB,iBAGDP,EAAAA,EAAAA,KAAA,SACIS,UAAWC,EACXC,KAAK,OACLuF,GAAG,OACHN,KAAK,OAELqC,YAAY,cACZhC,MAAOpC,EACPiE,SAAUhC,GACVpD,QAAS,kBAAMgD,IAAkB,EAAK,EACtCrF,MAAO,CAAC6H,WAAY,kBAExBlI,EAAAA,EAAAA,KAAA,UACIW,KAAK,SACLF,UAAWC,EACXL,MAAO,CAACC,MAAO,MAAO6H,eAAgB,SACtCzF,QA5KK,WACrB,IACM0F,EADQ3B,SAASC,eAAe,QACf2B,cAAc,SAEjC5C,GACA2C,EAAUE,OAEVF,EAAUG,QAGd7C,IAAkB,SAAA8C,GAAS,OAAKA,CAAS,GAC7C,EAiK8CjI,SAEzBkF,IACKzF,EAAAA,EAAAA,KAACyI,EAAAA,IAAiB,CAACpI,MAAO,CAACC,MAAO,GAAIO,OAAQ,OAC9Cb,EAAAA,EAAAA,KAAC0I,EAAAA,IAAmB,CAACrI,MAAO,CAACC,MAAO,GAAIO,OAAQ,QAIzD4E,KACGzF,EAAAA,EAAAA,KAAA,OAAKS,UAAWC,EAAaH,UACzBP,EAAAA,EAAAA,KAACiB,EAAU,CACPE,UAAWA,GACXC,SA3KH,SAACyC,GACtByB,GAAazB,EACjB,EA0K4BxC,QAlKA,WACxBqE,IAAkB,EACtB,EAiK4BpE,OAzKL,WACnB,IAAMqH,GAAeC,EAAAA,EAAAA,GAAkBzH,IACvC2C,EAAQ6E,GACRjD,IAAkB,EACtB,UA2KYlF,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAYH,SAAA,EACxBP,EAAAA,EAAAA,KAAA,SACIS,UAAWC,EACXkH,QAAQ,OAAMrH,SACjB,iBAGDP,EAAAA,EAAAA,KAAA,SACIS,UAAWC,EACXC,KAAK,OACLuF,GAAG,OACHN,KAAK,OACLK,MAAOhC,EACP6D,SAAUhC,MAEd9F,EAAAA,EAAAA,KAAA,UACIW,KAAK,SACLF,UAAWC,EACXH,UAEAP,EAAAA,EAAAA,KAAC0I,EAAAA,IAAmB,CAACrI,MAAO,CAACC,MAAO,GAAIO,OAAQ,YAIxDL,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAYH,SAAA,EACxBP,EAAAA,EAAAA,KAAA,SACIS,UAAWC,EACXkH,QAAQ,WAAUrH,SACrB,cAGDP,EAAAA,EAAAA,KAAA,SACIS,UAAWC,EACXC,KAAK,OACLuF,GAAG,WACHN,KAAK,WACLiC,QAAQ,kBACR5B,MAAO5B,EACPyD,SAAUhC,MAEd9F,EAAAA,EAAAA,KAAA,UACIW,KAAK,SACLF,UAAWC,EACXgC,QAAS,kBAAM4B,EAAS,GAAG,EAAC/D,UAE5BP,EAAAA,EAAAA,KAAC+H,EAAAA,IAAO,CAAC1H,MAAO,CAACC,MAAO,GAAIO,OAAQ,YAK5CL,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAaH,SAAA,EACzBP,EAAAA,EAAAA,KAAA,SACIS,UAAWC,EACXkH,QAAQ,WAAUrH,SACrB,cAGDP,EAAAA,EAAAA,KAAA,SACIS,UAAWC,EACXC,KAAK,OACLuF,GAAG,WACHN,KAAK,WACLqC,YAAY,kBACZY,UAAQ,EACR5C,MAAOxB,EACPqD,SAAUhC,MAEd9F,EAAAA,EAAAA,KAAA,UACIW,KAAK,SACLF,UAAWC,EACXH,UAEAP,EAAAA,EAAAA,KAAC0I,EAAAA,IAAmB,CAACrI,MAAO,CAACC,MAAO,GAAIO,OAAQ,YAKxDL,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAaH,SAAA,EACzBP,EAAAA,EAAAA,KAAA,SACIS,UAAWC,EACXkH,QAAQ,QAAOrH,SAClB,iBAGDP,EAAAA,EAAAA,KAAA,SACIS,UAAWC,EACXC,KAAK,OACLuF,GAAG,QACHN,KAAK,QACLiD,UAAQ,KAGZ7I,EAAAA,EAAAA,KAAA,OAAKS,UAAWC,EAAcH,UAC1BP,EAAAA,EAAAA,KAAA,QAAMS,UAAWC,EAAoBH,SAAC,oBAE1CP,EAAAA,EAAAA,KAAA,UACIW,KAAK,SACLF,UAAWC,EACXH,UAEAP,EAAAA,EAAAA,KAAC+H,EAAAA,IAAO,CAAC1H,MAAO,CAACC,MAAO,GAAIO,OAAQ,YAK5CL,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAaH,SAAA,EACzBP,EAAAA,EAAAA,KAAA,SACIS,UAAWC,EACXkH,QAAQ,WAAUrH,SACrB,cAGDP,EAAAA,EAAAA,KAAA,SACIS,UAAWC,EACXC,KAAK,OACLuF,GAAG,WACHN,KAAK,WACLqC,YAAY,kBACZY,UAAQ,EACR5C,MAAOpB,GACPiD,SAAUhC,MAEd9F,EAAAA,EAAAA,KAAA,UACIW,KAAK,SACLF,UAAWC,EACXH,UAEAP,EAAAA,EAAAA,KAAC0I,EAAAA,IAAmB,CAACrI,MAAO,CAACC,MAAO,GAAIO,OAAQ,eAM5Db,EAAAA,EAAAA,KAAA,UAAQW,KAAK,SAASF,UAAWC,EAAWH,SAEd,YAAtBT,EAASyG,SACP,YACA,WAKtB,C,uDCpaA,MAAuB,mB,SCCVuC,EAAO,SAAH5H,GAAsB,IAAhBX,EAAQW,EAARX,SACnB,OACIP,EAAAA,EAAAA,KAAA,QAAMS,UAAWC,EAASH,SACrBA,GAGb,C,uDCPA,MAAwB,yB,SCCXwI,EAAY,SAAH7H,GAAmB,IAAbmC,EAAKnC,EAALmC,MACxB,OACIrD,EAAAA,EAAAA,KAAA,MAAIS,UAAWC,EAAUH,SACpB8C,GAGb,C,wJCqCA,UAhCa,WACT,IAAQ6C,GAAO8C,EAAAA,EAAAA,MAAP9C,GACFrD,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEXJ,GAAQqG,EAAAA,EAAAA,IAAYC,EAAAA,IACpBC,GAAYF,EAAAA,EAAAA,IAAYG,EAAAA,IACxBC,GAAQJ,EAAAA,EAAAA,IAAYK,EAAAA,IAa1B,OAVA3D,EAAAA,EAAAA,YAAU,WACN5C,EAAS0E,EAAAA,EAAAA,kBAA6BvB,IAElCmD,IACA3B,EAAAA,GAAAA,MAAY,iCACZ7E,EAAS,cAGjB,GAAG,CAACE,EAAUF,EAAUqD,EAAImD,KAGxB7I,EAAAA,EAAAA,MAACsI,EAAAA,EAAI,CAAAvI,SAAA,EACDP,EAAAA,EAAAA,KAACL,EAAAA,EAAU,KACXK,EAAAA,EAAAA,KAAC+I,EAAAA,EAAS,CAAC1F,MAAM,eAEhB8F,IAAanJ,EAAAA,EAAAA,KAACuJ,EAAAA,EAAM,IAEpB3G,IAAS5C,EAAAA,EAAAA,KAAC2C,EAAAA,EAAS,CAACC,MAAOA,MAGxC,C,gIC3CO,IAAM4G,EAAe,SAAArJ,GAAK,OAAIA,EAAMsJ,MAAO,EACrCP,EAAgB,SAAA/I,GAAK,OAAIA,EAAMuJ,OAAQ,EACvCN,EAAkB,SAAAjJ,GAAK,OAAIA,EAAMgJ,SAAU,EAC3CG,EAAc,SAAAnJ,GAAK,OAAIA,EAAMkJ,KAAM,C,8ECHzC,IAAMT,EAAoB,SAACe,GAEhC,IAAMC,EAAa,IAAIxE,KAAKuE,GAGtB5I,EAAM6I,EAAWC,UAAUC,WAAWC,SAAS,EAAG,KAClDC,GAASJ,EAAWK,WAAa,GAAGH,WAAWC,SAAS,EAAG,KAC3DG,EAAON,EAAWO,cAKxB,MAFmB,GAAAxC,OAAM5G,EAAG,KAAA4G,OAAIqC,EAAK,KAAArC,OAAIuC,EAG3C,EAEaE,EAAa,SAACvG,GACzB,IAAMwG,EAAYxG,EAAKyG,MAAM,KAEvBvJ,EAAMsJ,EAAU,GAChBL,EAAQK,EAAU,GAIxB,MAFqB,GAAA1C,OAAM5G,EAAG,KAAA4G,OAAIqC,EAGpC,C","sources":["webpack://event-planner/./src/components/BackButton/BackButton.module.css?d3a5","components/BackButton/BackButton.jsx","webpack://event-planner/./src/components/EventForm/DatePicker/DatePicker.module.css?b8f7","components/EventForm/DatePicker/DatePicker.jsx","webpack://event-planner/./src/components/EventForm/EventForm.module.css?a911","components/EventForm/EventForm.jsx","webpack://event-planner/./src/components/Main/Main.module.css?5474","components/Main/Main.jsx","webpack://event-planner/./src/components/PageTitle/PageTitle.module.css?ae51","components/PageTitle/PageTitle.jsx","pages/Edit/Edit.jsx","redux/selectors.js","utils/convertDateFormat.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"button\":\"BackButton_button__5Jmp+\"};","import { Link, useLocation } from 'react-router-dom';\nimport { AiOutlineArrowLeft } from 'react-icons/ai';\nimport css from \"./BackButton.module.css\";\n\nexport const BackButton = () => {\n    const location = useLocation();\n\n    return (\n        <Link to={location.state?.from ?? '/'} style={{width: 65}}>\n            <button className={css.button} type='button'>\n                <AiOutlineArrowLeft style={{width: 18, height: 18}} />\n                Back\n            </button>\n        </Link>\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"actions\":\"DatePicker_actions__9ZNx4\",\"cancelBtn\":\"DatePicker_cancelBtn__nvu1H\",\"selectBtn\":\"DatePicker_selectBtn__9VnMV\",\"caption\":\"DatePicker_caption__qHrJR\",\"month\":\"DatePicker_month__+Dx09\",\"nav\":\"DatePicker_nav__dLCUU\",\"navBtn\":\"DatePicker_navBtn__WNL1j\",\"navIcon\":\"DatePicker_navIcon__iVv8h\",\"table\":\"DatePicker_table__Uy1v8\",\"head\":\"DatePicker_head__UkOFk\",\"dayOfWeek\":\"DatePicker_dayOfWeek__6g7hy\",\"row\":\"DatePicker_row__zta8U\",\"cell\":\"DatePicker_cell__dKVtw\",\"calendarDay\":\"DatePicker_calendarDay__Mu8Cf\",\"today\":\"DatePicker_today__g1WFp\",\"selected\":\"DatePicker_selected__dY7t8\"};","import { DayPicker } from 'react-day-picker';\nimport { format } from 'date-fns';\nimport css from './DatePicker.module.css';\n\n// Function to reformat day names to show in first three letters\nconst formatWeekdayName = (day) => format(day, 'EEE');\n\nexport const DatePicker = ({\n    startDate, \n    onSelect,\n    onClose,\n    onSave,\n    onDayClick\n}) => {\n    const classNames = {\n        caption: css.caption,\n        caption_label: css.month,\n        nav: css.nav,\n        nav_button: css.navBtn,\n        nav_icon: css.navIcon,\n        table: css.table,\n        head: css.head,\n        head_cell: css.dayOfWeek,\n        row: css.row,\n        cell: css.cell,\n        day: css.calendarDay,\n        day_today: css.today,\n        day_selected: css.selected\n    };\n\n    return (\n        <>\n            <DayPicker\n                selected={startDate}\n                mode=\"single\"\n                onSelect={onSelect}\n                classNames={classNames}\n                formatters={{formatWeekdayName}}\n            />\n\n            <div className={css.actions}>\n                <button \n                    type=\"button\"\n                    className={css.cancelBtn}\n                    onClick={onClose}\n                >\n                    Cancel\n                </button>\n                <button \n                    type=\"button\"\n                    className={css.selectBtn}\n                    onClick={onSave}\n                >\n                    Choose date\n                </button>\n            </div>\n        </>\n    );\n}","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"EventForm_form__Pbmxn\",\"container\":\"EventForm_container__HcrhB\",\"label\":\"EventForm_label__idUCC\",\"input\":\"EventForm_input__ZgyEU\",\"textarea\":\"EventForm_textarea__ecIcj\",\"enabled\":\"EventForm_enabled__06qEc\",\"inputBtn\":\"EventForm_inputBtn__H+S8h\",\"disabled\":\"EventForm_disabled__PQNMo\",\"fakeInput\":\"EventForm_fakeInput__Q0qKq\",\"button\":\"EventForm_button__Q2j1k\",\"calendar\":\"EventForm_calendar__xOj4l\",\"fakePlaceholder\":\"EventForm_fakePlaceholder__X7Vc6\"};","import { useState, useEffect } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { operations } from \"redux/operations\";\n\nimport { DatePicker } from \"./DatePicker/DatePicker\";\nimport { convertDateFormat } from \"utils/convertDateFormat\";\nimport { nanoid } from \"nanoid\";\nimport { toast } from \"react-toastify\";\n\nimport { MdClose, MdKeyboardArrowDown, MdKeyboardArrowUp } from \"react-icons/md\";\nimport css from \"./EventForm.module.css\";\nimport defaultImage from \"../../images/events/default2.png\";\n\nexport const EventForm = ({ event }) => {\n    const location = useLocation();\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n\n    const [title, setTitle] = useState('');\n    const [description, setDescription] = useState('');\n    const [date, setDate] = useState('');\n    const [time, setTime] = useState('');\n    const [place, setPlace] = useState('');\n    const [category, setCategory]= useState('');\n    const [priority, setPriority] = useState('');\n    const [image, setImage] = useState(null);\n\n    const [startDate, setStartDate] = useState(new Date());\n\n    const [showDatePicker, setShowDatePicker] = useState(false);\n\n    // filling out the form fields when opening the Edit page\n    useEffect(() => {\n        if (!event) {\n            return;\n        }\n\n        const { \n            name, \n            description, \n            category, \n            priority, \n            place, \n            date, \n            time, \n            photo \n        } = event;\n        setTitle(name);\n        setDescription(description);\n        setDate(date);\n        setTime(time);\n        setPlace(place);\n        setCategory(category);\n        setPriority(priority);\n        setImage(photo);\n\n    }, [event]);\n\n    const handleInputChange = (e) => {\n        switch (e.target.name) {\n            case \"title\": \n                setTitle(e.target.value);\n                break;\n            case \"description\": \n                setDescription(e.target.value);\n                break;\n            case \"date\": \n                setDate(e.target.value);\n                break;\n            case \"time\": \n                setTime(e.target.value);\n                break;\n            case \"location\": \n                setPlace(e.target.value);\n                break;\n            case \"category\": \n                setCategory(e.target.value);\n                break;\n            case \"priority\": \n                setPriority(e.target.value);\n                break;\n            default: \n                return;\n        }\n    }\n\n    const toggleDataPicker = () => {\n        const form =  document.getElementById(\"form\");\n        const dateInput = form.querySelector(\"#date\");\n\n        if (showDatePicker) {\n            dateInput.blur();\n        } else {\n            dateInput.focus();\n        }\n\n        setShowDatePicker(prevState => !prevState)\n    }\n\n    const handleDateChange = (date) => {\n        setStartDate(date);\n    }\n\n    const handleSaveDate = () => {\n        const selectedDate = convertDateFormat(startDate);\n        setDate(selectedDate);\n        setShowDatePicker(false);\n    }\n\n    const handleCloseCalendar = () => {\n        setShowDatePicker(false);\n    }\n\n    const collectData = () => {\n        const newEvent = {\n            id: event.id ?? nanoid(),\n            name: title,\n            description,\n            category,\n            priority,\n            place,\n            date,\n            time,\n            photo: image ?? defaultImage\n        }\n\n        return newEvent;\n    }\n\n    const formValidation = () => {\n        const form =  document.getElementById(\"form\");\n        const inputs = form.querySelectorAll(\"input:not(:disabled)\");\n        \n        const validate = Array.from(inputs).every(i => i.value.trim());\n        console.log(validate);\n\n        if (!validate) {\n            inputs.forEach(function(input) {\n            // Check if the input is empty (no value entered)\n            if (!input.value.trim()) {\n                    input.setCustomValidity(\"This field is required.\");\n                } else {\n                    input.setCustomValidity(\"\");\n                }\n            });\n\n            return false;\n        }\n\n        return true;\n    }\n\n    const handleFormSubmit = (e) => {\n        e.preventDefault();\n        console.log(location.pathname)\n\n        const validate = formValidation();\n\n        if (!validate) {\n            toast.error(\"Please fill out all the required fields!\");\n            return;\n        }\n\n        const newEvent = collectData();\n        console.log(newEvent);\n\n        if (location.pathname === '/create') {\n            dispatch(operations.createEvent(newEvent));\n            toast.success(\"A new event has been created!\");\n            navigate('/');\n        }\n\n        if (location.pathname === `/edit/${event.id}`) {\n            const id = event.id;\n            dispatch(operations.updateEvent({id, newEvent}));\n            toast.success(\"The event info has been updated!\");\n            navigate(`/event/${event.id}`);\n        }\n    }\n\n    return (\n        <form className={css.form} id=\"form\" onSubmit={handleFormSubmit}>\n            <div className={css.container}>\n\n                <div className={css.enabled}>\n                    <label \n                        className={css.label} \n                        htmlFor=\"title\"\n                    >\n                        Title\n                    </label>\n                    <input \n                        className={css.input}\n                        type=\"text\"\n                        id=\"title\" \n                        name=\"title\" \n                        pattern=\"[A-Z][A-Za-z0-9 ]*\"\n                        value={title}\n                        onChange={handleInputChange}\n                    />\n                    <button \n                        type=\"button\" \n                        className={css.inputBtn} \n                        onClick={() => setTitle('')}\n                    >\n                        <MdClose style={{width: 18, height: 18}} />\n                    </button>\n                </div>\n                \n                <div className={css.enabled}>\n                    <label \n                        className={css.label}  \n                        htmlFor=\"description\"\n                    >\n                        Description\n                    </label>\n                    <textarea\n                        className={css.textarea} \n                        type=\"text\"\n                        id=\"description\" \n                        name=\"description\" \n                        value={description}\n                        onChange={handleInputChange}\n                    ></textarea>\n                    <button \n                        type=\"button\" \n                        className={css.inputBtn} \n                        onClick={() => setDescription('')}\n                    >\n                        <MdClose style={{width: 18, height: 18}} />\n                    </button>\n                </div>\n                \n                <div className={css.enabled} \n                    style={{position: \"relative\"}}\n                >\n                    <label \n                        className={css.label} \n                        htmlFor=\"date\"\n                    >\n                        Select date\n                    </label>\n                    <input \n                        className={css.input} \n                        type=\"text\"\n                        id=\"date\" \n                        name=\"date\" \n                        // pattern=\"/^\\d{2}\\.\\d{2}\\.\\d{4}$/\"\n                        placeholder=\"Select date\"\n                        value={date}\n                        onChange={handleInputChange}\n                        onClick={() => setShowDatePicker(true)}\n                        style={{caretColor: \"transparent\"}}\n                    />\n                    <button \n                        type=\"button\" \n                        className={css.inputBtn} \n                        style={{width: \"90%\", justifyContent: \"right\"}}\n                        onClick={toggleDataPicker}\n                    >\n                        {showDatePicker \n                            ? <MdKeyboardArrowUp style={{width: 24, height: 24}}/>\n                            : <MdKeyboardArrowDown style={{width: 24, height: 24}} />\n                        }\n                    </button>\n                    \n                    {showDatePicker && \n                        <div className={css.calendar}>\n                            <DatePicker \n                                startDate={startDate}\n                                onSelect={handleDateChange}\n                                onClose={handleCloseCalendar}\n                                onSave={handleSaveDate}\n                            />\n                        </div>\n                    }\n                </div>\n\n                <div className={css.enabled}>\n                    <label \n                        className={css.label}  \n                        htmlFor=\"time\"\n                    >\n                        Select time\n                    </label>\n                    <input \n                        className={css.input} \n                        type=\"time\"\n                        id=\"time\" \n                        name=\"time\" \n                        value={time}\n                        onChange={handleInputChange}\n                    />\n                    <button \n                        type=\"button\" \n                        className={css.inputBtn} \n                        // onClick={() => setKeywords('')}\n                    >\n                        <MdKeyboardArrowDown style={{width: 24, height: 24}} />\n                    </button>\n                </div>\n\n                <div className={css.enabled}>\n                    <label \n                        className={css.label}  \n                        htmlFor=\"location\"\n                    >\n                        Location\n                    </label>\n                    <input \n                        className={css.input} \n                        type=\"text\"\n                        id=\"location\" \n                        name=\"location\" \n                        pattern=\"[A-Z][A-Za-z ]*\"\n                        value={place}\n                        onChange={handleInputChange}\n                    />\n                    <button \n                        type=\"button\" \n                        className={css.inputBtn} \n                        onClick={() => setPlace('')}\n                    >\n                        <MdClose style={{width: 18, height: 18}} />\n                    </button>\n                </div>\n                \n                {/* category - dropdown */}\n                <div className={css.disabled}>\n                    <label \n                        className={css.label} \n                        htmlFor=\"category\"\n                    >\n                        Category\n                    </label>\n                    <input \n                        className={css.input} \n                        type=\"text\"\n                        id=\"category\" \n                        name=\"category\" \n                        placeholder=\"Select category\"\n                        disabled\n                        value={category}\n                        onChange={handleInputChange}\n                    />\n                    <button \n                        type=\"button\" \n                        className={css.inputBtn} \n                        // onClick={() => setKeywords('')}\n                    >\n                        <MdKeyboardArrowDown style={{width: 24, height: 24}} />\n                    </button>\n                </div>\n\n                {/* image */}\n                <div className={css.disabled}>\n                    <label \n                        className={css.label} \n                        htmlFor=\"image\"\n                    >\n                        Add picture\n                    </label>\n                    <input \n                        className={css.input} \n                        type=\"file\"\n                        id=\"image\" \n                        name=\"image\" \n                        disabled\n                    />\n                    {/* div to overlap over the file input */}\n                    <div className={css.fakeInput}>\n                        <span className={css.fakePlaceholder}>Select image</span>\n                    </div>\n                    <button \n                        type=\"button\" \n                        className={css.inputBtn} \n                        // onClick={() => setImage('')}\n                    >\n                        <MdClose style={{width: 18, height: 18}} />\n                    </button>\n                </div>\n\n                {/* priority - dropdown*/}\n                <div className={css.disabled}>\n                    <label \n                        className={css.label} \n                        htmlFor=\"priority\"\n                    >\n                        Priority\n                    </label>\n                    <input \n                        className={css.input} \n                        type=\"text\"\n                        id=\"priority\" \n                        name=\"priority\" \n                        placeholder=\"Select priority\"\n                        disabled\n                        value={priority}\n                        onChange={handleInputChange}\n                    />\n                    <button \n                        type=\"button\" \n                        className={css.inputBtn} \n                        // onClick={() => setKeywords('')}\n                    >\n                        <MdKeyboardArrowDown style={{width: 24, height: 24}} />\n                    </button>\n                </div>\n            </div>\n        \n            {/* adjust text depending on the location */}\n            <button type=\"submit\" className={css.button}>\n                {\n                    location.pathname === '/create'\n                    ? \"Add event\"\n                    : \"Save\"\n                }\n            </button>\n        </form>\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"Main_main__QhrKC\"};","import css from \"./Main.module.css\"\n\nexport const Main = ({ children }) => {\n    return (\n        <main className={css.main}>\n            {children}\n        </main>\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"PageTitle_title__8ZgTZ\"};","import css from \"./PageTitle.module.css\"\n\nexport const PageTitle = ({ title }) => {\n    return (\n        <h2 className={css.title}>\n            {title}\n        </h2>\n    )\n}","import { useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { operations } from \"redux/operations\";\nimport { selectCurrent, selectIsLoading, selectError } from \"redux/selectors\";\nimport { toast } from 'react-toastify';\n\nimport { Loader } from \"components/Loader/Loader\";\nimport { Main } from \"components/Main/Main\";\nimport { PageTitle } from \"components/PageTitle/PageTitle\";\nimport { BackButton } from \"components/BackButton/BackButton\";\nimport { EventForm } from \"components/EventForm/EventForm\";\n\nconst Edit = () => {\n    const { id } = useParams();\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n\n    const event = useSelector(selectCurrent);\n    const isLoading = useSelector(selectIsLoading);\n    const error = useSelector(selectError);\n\n    // fetch data\n    useEffect(() => {\n        dispatch(operations.fetchEventDetails(id));\n\n        if (error) {\n            toast.error(\"Oops! Something went wrong...\");\n            navigate('/not-found');\n        }\n\n    }, [dispatch, navigate, id, error])\n\n    return (\n        <Main>\n            <BackButton />\n            <PageTitle title=\"Edit event\" />\n\n            {isLoading && <Loader />}\n            \n            {event && <EventForm event={event} />}\n        </Main>\n    )\n}\n\nexport default Edit;","export const selectEvents = state => state.events;\nexport const selectCurrent = state => state.current;\nexport const selectIsLoading = state => state.isLoading;\nexport const selectError = state => state.error;","export const convertDateFormat = (inputDate) => {  \n  // Parse the input date string\n  const parsedDate = new Date(inputDate);\n  \n  // Get the day, month, and year from the parsed date\n  const day = parsedDate.getDate().toString().padStart(2, '0');\n  const month = (parsedDate.getMonth() + 1).toString().padStart(2, '0');\n  const year = parsedDate.getFullYear();\n\n  // Format the date as dd.mm.yyyy\n  const formattedDate = `${day}.${month}.${year}`;\n\n  return formattedDate;\n}\n\nexport const adjustDate = (date) => {\n  const dateParts = date.split('.');\n  \n  const day = dateParts[0];\n  const month = dateParts[1];\n    \n  const reformattedDate = `${day}.${month}`;\n  \n  return reformattedDate;\n}"],"names":["BackButton","_location$state$from","_location$state","location","useLocation","_jsx","Link","to","state","from","style","width","children","_jsxs","className","css","type","AiOutlineArrowLeft","height","formatWeekdayName","day","format","DatePicker","_ref","startDate","onSelect","onClose","onSave","classNames","onDayClick","caption","caption_label","nav","nav_button","nav_icon","table","head","head_cell","row","cell","day_today","day_selected","_Fragment","DayPicker","selected","mode","formatters","onClick","EventForm","event","navigate","useNavigate","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","title","setTitle","_useState3","_useState4","description","setDescription","_useState5","_useState6","date","setDate","_useState7","_useState8","time","setTime","_useState9","_useState10","place","setPlace","_useState11","_useState12","category","setCategory","_useState13","_useState14","priority","setPriority","_useState15","_useState16","image","setImage","_useState17","Date","_useState18","setStartDate","_useState19","_useState20","showDatePicker","setShowDatePicker","useEffect","name","photo","handleInputChange","e","target","value","id","onSubmit","preventDefault","console","log","pathname","inputs","document","getElementById","querySelectorAll","validate","Array","every","i","trim","forEach","input","setCustomValidity","formValidation","newEvent","_event$id","nanoid","collectData","operations","toast","concat","htmlFor","pattern","onChange","MdClose","position","placeholder","caretColor","justifyContent","dateInput","querySelector","blur","focus","prevState","MdKeyboardArrowUp","MdKeyboardArrowDown","selectedDate","convertDateFormat","disabled","Main","PageTitle","useParams","useSelector","selectCurrent","isLoading","selectIsLoading","error","selectError","Loader","selectEvents","events","current","inputDate","parsedDate","getDate","toString","padStart","month","getMonth","year","getFullYear","adjustDate","dateParts","split"],"sourceRoot":""}