{"version":3,"file":"static/js/430.6c623959.chunk.js","mappings":"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","sources":["webpack://event-planner/./src/components/Main/Main.module.css?5474","components/Main/Main.jsx","webpack://event-planner/./src/components/PageTitle/PageTitle.module.css?ae51","components/PageTitle/PageTitle.jsx","webpack://event-planner/./src/components/Filters/Filters.module.css?0811","components/Filters/Filters.jsx","webpack://event-planner/./src/components/EventCard/EventCard.module.css?7ef5","components/EventCard/EventCard.jsx","webpack://event-planner/./src/components/Pagination/Pagination.module.css?4da5","components/Pagination/Pagination.jsx","webpack://event-planner/./src/pages/Home/Home.module.css?1370","pages/Home/Home.jsx","redux/selectors.js","utils/convertDateFormat.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"main\":\"Main_main__QhrKC\"};","import css from \"./Main.module.css\"\n\nexport const Main = ({ children }) => {\n    return (\n        <main className={css.main}>\n            {children}\n        </main>\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"PageTitle_title__8ZgTZ\"};","import css from \"./PageTitle.module.css\"\n\nexport const PageTitle = ({ title }) => {\n    return (\n        <h2 className={css.title}>\n            {title}\n        </h2>\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Filters_container__6RvBO\",\"filterContainer\":\"Filters_filterContainer__RKwbE\",\"category\":\"Filters_category__8IdNQ\",\"optionList\":\"Filters_optionList__N3b0o\",\"option\":\"Filters_option__juAzk\",\"arrowIcon\":\"Filters_arrowIcon__b9Ohd\",\"sort\":\"Filters_sort__yGpe8\",\"buttonText\":\"Filters_buttonText__xJpDI\",\"expandedButton\":\"Filters_expandedButton__uWV4r\",\"wideContainer\":\"Filters_wideContainer__ft794\",\"showMenu\":\"Filters_showMenu__wDNoz\"};","import { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { filterByCategory } from \"redux/filterSlice\";\nimport { CiFilter } from \"react-icons/ci\";\nimport { LiaSlidersHSolid } from \"react-icons/lia\";\nimport { MdArrowUpward } from \"react-icons/md\";\nimport { nanoid } from \"nanoid\";\nimport { categories, sortingOptions } from \"utils/options\";\nimport css from \"./Filters.module.css\"\n\nexport const Filters = ({ isMobile }) => {\n    const [category, setCategory] = useState(\"Category\");\n    const [showCategory, setShowCategory] = useState(false);\n    const [showSortingOptions, setShowSortingOptions] = useState(false);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(filterByCategory(category));\n    }, [category, dispatch]);\n\n    const handleCategoryClick = () => {\n        setShowCategory(prevState => !prevState);\n        setShowSortingOptions(false);\n    }\n\n    const handleSortingClick = () => {\n        setShowSortingOptions(prevState => !prevState);\n        setShowCategory(false);\n    }\n\n    const handleCategorySelect = (e) => {\n        setCategory(e.target.innerText);\n    }\n\n    return (\n        <div className={css.container}>\n\n            <div \n                className={\n                    showCategory && isMobile\n                    ? `${css.filterContainer} ${css.wideContainer}`\n                    : css.filterContainer\n                } \n            >\n                <button \n                    className={\n                        showCategory \n                        ? `${css.category} ${css.showMenu}`\n                        : css.category\n                    } \n                    type=\"button\"\n                    onClick={handleCategoryClick}\n                >\n                    <span \n                        className={\n                            showCategory \n                            ? css.expandedButton\n                            : css.buttonText\n                        }\n                    >\n                        {category}\n                    </span>\n                    <CiFilter style={{width: 24, height: 24}} />\n                </button>\n\n                {showCategory && \n                    <ul className={css.optionList}>\n                        {categories.map(c => \n                            <button \n                                type=\"button\" \n                                key={nanoid()}\n                                className={css.option}\n                                onClick={handleCategorySelect}\n                            >\n                                {c}\n                            </button>\n                        )}\n                    </ul>\n                }\n            </div>\n            \n            <div className={\n                    showSortingOptions && isMobile\n                    ? `${css.filterContainer} ${css.wideContainer}`\n                    : css.filterContainer\n                } >\n                <button \n                    className={\n                        showSortingOptions \n                        ? `${css.sort} ${css.showMenu}`\n                        : css.sort\n                    } \n                    type=\"button\"\n                    onClick={handleSortingClick}\n                >\n                    <span \n                        className={\n                            showSortingOptions \n                            ? css.expandedButton\n                            : css.buttonText\n                        }\n                    >\n                        Sort by\n                    </span>\n                    <LiaSlidersHSolid style={{width: 24, height: 24}} />\n                </button>\n\n                {showSortingOptions && \n                    <ul className={css.optionList}>\n                        {sortingOptions.map(o => \n                            <button \n                                type=\"button\" \n                                key={nanoid()}\n                                className={css.option}\n                            >\n                                {o}\n                                <MdArrowUpward \n                                    className={css.arrowIcon}\n                                    style={{width: 18, height: 18}}\n                                 />\n                            </button>\n                        )}\n                    </ul>\n                }\n            </div>\n        \n        </div>\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"EventCard_card__7qHzt\",\"filters\":\"EventCard_filters__Vo+eb\",\"category\":\"EventCard_category__uOHYM\",\"priority\":\"EventCard_priority__Zuqvp\",\"imageContainer\":\"EventCard_imageContainer__vRXAr\",\"image\":\"EventCard_image__RbkSr\",\"info\":\"EventCard_info__BSA9t\",\"title\":\"EventCard_title__kR0Hw\",\"description\":\"EventCard_description__glXA3\",\"moreBtn\":\"EventCard_moreBtn__KLNWo\"};","import { useState, useEffect } from \"react\";\nimport { Link } from 'react-router-dom';\nimport { adjustDate } from \"utils/convertDateFormat\";\nimport css from \"./EventCard.module.css\";\n\nexport const EventCard = ({ event: { \n    id,\n    name, \n    description, \n    category, \n    priority, \n    place, \n    date, \n    time, \n    photo \n} }) => {\n    const [color, setColor] = useState(null);\n\n    useEffect(() => {\n        switch (priority) {\n            case \"high\":\n                setColor(\"#FF2B77\");\n                break;\n            case \"medium\": \n                setColor(\"#E2A300\");\n                break;\n            case \"low\": \n                setColor(\"#6BD475\");\n                break;\n            default:\n                return;\n        }\n    }, [priority])\n\n    const formattedDate = adjustDate(date);\n\n    return (\n        <div className={css.card}>\n            \n            <div className={css.filters}>\n                { category !== \"\" &&\n                    <span className={css.category}>{category}</span>\n                }\n                { priority !== \"\" &&\n                    <span className={css.priority} style={{color: color}}>{priority}</span>\n                }\n            </div>\n            \n            <div className={css.imageContainer}>\n                <img className={css.image} src={photo} alt={name} />\n\n                <div className={css.info}>\n                    <span>\n                        {formattedDate} at {time}\n                    </span>\n                    <span>{place}</span>\n                </div>\n            </div>\n\n            <h3 className={css.title}>{name}</h3>\n            <p className={css.description}>{description}</p>\n\n            <Link to={`/event/${id}`} >\n                <button type=\"button\" className={css.moreBtn}>More Info</button>\n            </Link>\n            \n        </div>\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"pagination\":\"Pagination_pagination__vcNDC\",\"container\":\"Pagination_container__DgzGU\",\"arrow\":\"Pagination_arrow__swiiK\",\"pages\":\"Pagination_pages__XYPpl\",\"page\":\"Pagination_page__tJXk6\",\"currentPage\":\"Pagination_currentPage__IVc9B\"};","import { useState, useEffect } from \"react\";\nimport { AiOutlineLeft, AiOutlineRight } from \"react-icons/ai\";\nimport css from \"./Pagination.module.css\";\n\nexport const Pagination = ({ isMobile }) => {\n    const [currentPage, setCurrentPage] = useState(1);\n\n    useEffect(() => {\n        const pageButtons = document.querySelectorAll(\"#page\");\n        const pages = Array.from(pageButtons);\n\n        pages.forEach(p => {\n            if (Number(p.innerHTML) === currentPage) {\n                p.classList.add(css.currentPage);\n            } else {\n                p.classList.remove(css.currentPage);\n            }\n        })\n    }, [currentPage])\n\n    const handlePageChange = (e) => {\n        setCurrentPage(Number(e.target.innerHTML));\n    }\n\n    return (\n        <div className={css.pagination}>\n            <div className={css.container}>\n                <button \n                    className={css.arrow}\n                    type=\"button\" \n                    disabled={currentPage === 1 ? true : false}\n                >\n                    <AiOutlineLeft style={{width: 18, height: 18}} />\n                </button>\n                    <ul className={css.pages}>\n                        <li>\n                            <button\n                                className={css.page} \n                                type=\"button\"\n                                id=\"page\"\n                                onClick={handlePageChange}\n                            >\n                                1\n                            </button>\n                        </li>\n                        <li>\n                            <button\n                                className={css.page}  \n                                type=\"button\"\n                                id=\"page\"\n                                onClick={handlePageChange}\n                            >\n                                2\n                            </button>\n                        </li>\n                        {!isMobile &&\n                        <li>\n                            <button\n                                className={css.page}  \n                                type=\"button\"\n                                id=\"page\"\n                                onClick={handlePageChange}\n                            >\n                                3\n                            </button>\n                        </li>\n                        }\n                        <li>\n                            <button\n                                className={css.page}  \n                                type=\"button\"\n                            >\n                                ...\n                            </button>\n                        </li>\n                        <li>\n                            <button\n                                className={css.page}  \n                                type=\"button\"\n                                id=\"page\"\n                                onClick={handlePageChange}\n                            >\n                                32\n                            </button>\n                        </li>\n                    </ul>\n                <button \n                    className={css.arrow} \n                    type=\"button\"\n                    disabled={currentPage === 32 ? true : false}\n                >\n                    <AiOutlineRight style={{width: 18, height: 18}} />\n                </button>\n            </div>\n        </div>\n        \n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"topBar\":\"Home_topBar__74uZp\",\"menu\":\"Home_menu__6g67z\",\"addButton\":\"Home_addButton__LVQi1\",\"buttonText\":\"Home_buttonText__KyPCP\",\"cardList\":\"Home_cardList__S69Qf\"};","import { useState, useEffect } from \"react\";\nimport { Link, useLocation } from 'react-router-dom';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { operations } from \"redux/operations\";\nimport { \n    selectEvents, \n    selectIsLoading, \n    selectCategory,\n    selectKeywords\n} from \"redux/selectors\";\n\nimport { Loader } from \"components/Loader/Loader\";\nimport { Main } from \"components/Main/Main\";\nimport { PageTitle } from \"components/PageTitle/PageTitle\";\nimport { Filters } from \"components/Filters/Filters\";\nimport { EventCard } from \"components/EventCard/EventCard\";\nimport { Pagination } from \"components/Pagination/Pagination\";\nimport { AiOutlinePlus } from \"react-icons/ai\";\nimport css from \"./Home.module.css\";\n\nconst Home = () => {\n    const [windowWidth, setWindowWidth] = useState(null);\n    const [isMobile, setIsMobile] = useState(true);\n    const [eventsPerPage, setEventsPerPage] = useState(6);\n\n    const events = useSelector(selectEvents);\n    const isLoading = useSelector(selectIsLoading);\n    const category = useSelector(selectCategory);\n    const keywords = useSelector(selectKeywords);\n\n    const location = useLocation();\n    const dispatch = useDispatch();\n\n    // sort by categories\n    const normalizedCategory = category.toLowerCase();\n    const categorizedEvents = (normalizedCategory === \"category\")\n    ? events\n    : events.filter(event => event.category.toLowerCase().includes(normalizedCategory));\n\n    // sort by search keywords\n    const normalizedKeywords = keywords.toLowerCase();\n    const filteredEvents = categorizedEvents.filter(event => event.name.toLowerCase().includes(normalizedKeywords));\n\n    // tracking window size (for changing screen orientation on mobile devices)\n    useEffect(() => {\n        setWindowWidth(window.innerWidth);\n\n        window.addEventListener('resize', handleResize);\n\n        return () => {\n        window.removeEventListener('resize', handleResize);\n        };\n    }, []);\n\n    //  device check\n    useEffect(() => {\n        if (windowWidth >= 768) {\n        setIsMobile(false);\n        }\n\n        if (windowWidth < 768) {\n        setIsMobile(true);\n        }\n\n        if (windowWidth >= 1280) {\n            setEventsPerPage(8);\n        } else {\n            setEventsPerPage(6);\n        }\n    }, [windowWidth]);\n\n    // fetch data\n    useEffect(() => {\n        dispatch(operations.fetchAllEvents())\n    }, [dispatch])\n\n    const handleResize = () => {\n        setWindowWidth(window.innerWidth);\n    };\n\n    return (\n        <Main>\n            <div className={css.topBar}>\n                <div className={css.menu}>\n                    <Filters isMobile={isMobile} />\n                    <Link \n                        to={\"/create\"} \n                        state={{ from: location.state?.from ?? \"/\" }}\n                    >\n                        <button type=\"button\" className={css.addButton}>\n                            <AiOutlinePlus \n                                style={{width: 24, height: 24}} \n                            /> \n                            <span className={css.buttonText}>Add new event</span>\n                        </button>\n                    </Link>\n                </div>\n\n                {!isMobile && \n                    <PageTitle \n                        title=\"My events\" \n                    />\n                }\n            </div>\n\n            {isLoading && <Loader />}\n            \n            <ul className={css.cardList}> \n                {filteredEvents.length > 0 && filteredEvents.map(event => \n                    <li key={event.id}>\n                        <EventCard event={event}/>\n                    </li>\n                )}\n            </ul>\n\n            {filteredEvents.length >= eventsPerPage &&\n                <Pagination isMobile={isMobile}/>\n            }\n            \n        </Main>\n    )\n}\n\nexport default Home;","export const selectEvents = state => state.events.events;\nexport const selectCurrent = state => state.events.current;\nexport const selectIsLoading = state => state.events.isLoading;\nexport const selectError = state => state.events.error;\n\nexport const selectCategory = state => state.filters.category;\nexport const selectKeywords = state => state.filters.keywords;","export const convertDateFormat = (inputDate) => {  \n  // Parse the input date string\n  const parsedDate = new Date(inputDate);\n  \n  // Get the day, month, and year from the parsed date\n  const day = parsedDate.getDate().toString().padStart(2, '0');\n  const month = (parsedDate.getMonth() + 1).toString().padStart(2, '0');\n  const year = parsedDate.getFullYear();\n\n  // Format the date as dd.mm.yyyy\n  const formattedDate = `${day}/${month}/${year}`;\n\n  return formattedDate;\n}\n\nexport const adjustDate = (date) => {\n  const dateParts = date.split('/');\n  \n  const day = dateParts[0];\n  const month = dateParts[1];\n    \n  const reformattedDate = `${day}.${month}`;\n  \n  return reformattedDate;\n}"],"names":["Main","_ref","children","_jsx","className","css","PageTitle","title","Filters","isMobile","_useState","useState","_useState2","_slicedToArray","category","setCategory","_useState3","_useState4","showCategory","setShowCategory","_useState5","_useState6","showSortingOptions","setShowSortingOptions","dispatch","useDispatch","useEffect","filterByCategory","handleCategorySelect","e","target","innerText","_jsxs","concat","type","onClick","prevState","CiFilter","style","width","height","categories","c","nanoid","LiaSlidersHSolid","sortingOptions","o","MdArrowUpward","EventCard","_ref$event","event","id","name","description","priority","place","date","time","photo","color","setColor","formattedDate","adjustDate","src","alt","Link","to","Pagination","currentPage","setCurrentPage","pageButtons","document","querySelectorAll","Array","from","forEach","p","Number","innerHTML","classList","add","remove","handlePageChange","disabled","AiOutlineLeft","AiOutlineRight","_location$state$from","_location$state","windowWidth","setWindowWidth","setIsMobile","eventsPerPage","setEventsPerPage","events","useSelector","selectEvents","isLoading","selectIsLoading","selectCategory","keywords","selectKeywords","location","useLocation","normalizedCategory","toLowerCase","categorizedEvents","filter","includes","normalizedKeywords","filteredEvents","window","innerWidth","addEventListener","handleResize","removeEventListener","operations","state","AiOutlinePlus","Loader","length","map","selectCurrent","current","selectError","error","filters","convertDateFormat","inputDate","parsedDate","Date","day","getDate","toString","padStart","month","getMonth","year","getFullYear","dateParts","split"],"sourceRoot":""}