{"version":3,"file":"static/js/76.abff895b.chunk.js","mappings":"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","sources":["webpack://event-planner/./src/components/BackButton/BackButton.module.css?d3a5","components/BackButton/BackButton.jsx","webpack://event-planner/./src/components/EventForm/DatePicker/DatePicker.module.css?b8f7","components/EventForm/DatePicker/DatePicker.jsx","webpack://event-planner/./src/components/EventForm/EventForm.module.css?a911","components/EventForm/EventForm.jsx","utils/convertDateFormat.js","webpack://event-planner/./src/components/Main/Main.module.css?5474","components/Main/Main.jsx","webpack://event-planner/./src/components/PageTitle/PageTitle.module.css?ae51","components/PageTitle/PageTitle.jsx","pages/Create/Create.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"button\":\"BackButton_button__5Jmp+\"};","import { Link, useLocation } from 'react-router-dom';\nimport { AiOutlineArrowLeft } from 'react-icons/ai';\nimport css from \"./BackButton.module.css\";\n\nexport const BackButton = () => {\n    const location = useLocation();\n\n    return (\n        <Link to={location.state?.from ?? '/'} style={{width: 65}}>\n            <button className={css.button} type='button'>\n                <AiOutlineArrowLeft style={{width: 18, height: 18}} />\n                Back\n            </button>\n        </Link>\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"actions\":\"DatePicker_actions__9ZNx4\",\"cancelBtn\":\"DatePicker_cancelBtn__nvu1H\",\"selectBtn\":\"DatePicker_selectBtn__9VnMV\",\"caption\":\"DatePicker_caption__qHrJR\",\"month\":\"DatePicker_month__+Dx09\",\"nav\":\"DatePicker_nav__dLCUU\",\"navBtn\":\"DatePicker_navBtn__WNL1j\",\"navIcon\":\"DatePicker_navIcon__iVv8h\",\"table\":\"DatePicker_table__Uy1v8\",\"head\":\"DatePicker_head__UkOFk\",\"dayOfWeek\":\"DatePicker_dayOfWeek__6g7hy\",\"row\":\"DatePicker_row__zta8U\",\"cell\":\"DatePicker_cell__dKVtw\",\"calendarDay\":\"DatePicker_calendarDay__Mu8Cf\",\"today\":\"DatePicker_today__g1WFp\",\"selected\":\"DatePicker_selected__dY7t8\"};","import { DayPicker } from 'react-day-picker';\nimport css from './DatePicker.module.css';\n\nexport const DatePicker = ({\n    startDate, \n    onSelect,\n    onClose,\n    onSave\n}) => {\n    const classNames = {\n        caption: css.caption,\n        caption_label: css.month,\n        nav: css.nav,\n        nav_button: css.navBtn,\n        nav_icon: css.navIcon,\n        table: css.table,\n        head: css.head,\n        head_cell: css.dayOfWeek,\n        row: css.row,\n        cell: css.cell,\n        day: css.calendarDay,\n        day_today: css.today,\n        day_selected: css.selected\n    };\n\n    return (\n        <>\n            <DayPicker\n                selected={startDate}\n                mode=\"single\"\n                onSelect={onSelect}\n                classNames={classNames}\n            />\n\n            <div className={css.actions}>\n                <button \n                    type=\"button\"\n                    className={css.cancelBtn}\n                    onClick={onClose}\n                >\n                    Cancel\n                </button>\n                <button \n                    type=\"button\"\n                    className={css.selectBtn}\n                    onClick={onSave}\n                >\n                    Choose date\n                </button>\n            </div>\n        </>\n    );\n}","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"EventForm_form__Pbmxn\",\"container\":\"EventForm_container__HcrhB\",\"label\":\"EventForm_label__idUCC\",\"input\":\"EventForm_input__ZgyEU\",\"textarea\":\"EventForm_textarea__ecIcj\",\"enabled\":\"EventForm_enabled__06qEc\",\"inputBtn\":\"EventForm_inputBtn__H+S8h\",\"disabled\":\"EventForm_disabled__PQNMo\",\"fakeInput\":\"EventForm_fakeInput__Q0qKq\",\"button\":\"EventForm_button__Q2j1k\",\"calendar\":\"EventForm_calendar__xOj4l\",\"fakePlaceholder\":\"EventForm_fakePlaceholder__X7Vc6\"};","import { useState, useEffect } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { DatePicker } from \"./DatePicker/DatePicker\";\nimport { convertDateFormat } from \"utils/convertDateFormat\";\nimport { MdClose, MdKeyboardArrowDown, MdKeyboardArrowUp } from \"react-icons/md\";\nimport { nanoid } from \"nanoid\";\nimport { toast } from \"react-toastify\";\nimport css from \"./EventForm.module.css\";\nimport defaultImage from \"../../images/events/default2.png\";\n\nexport const EventForm = ({ event }) => {\n    const location = useLocation();\n    const navigate = useNavigate();\n\n    const [title, setTitle] = useState('');\n    const [description, setDescription] = useState('');\n    const [date, setDate] = useState('');\n    const [time, setTime] = useState('');\n    const [place, setPlace] = useState('');\n    const [category, setCategory]= useState('');\n    const [priority, setPriority] = useState('');\n    // const [image, setImage] = useState(defaultImage);\n\n    const [startDate, setStartDate] = useState(new Date());\n\n    const [showDatePicker, setShowDatePicker] = useState(false);\n\n    // filling out the form fields when opening the Edit page\n    useEffect(() => {\n        if (!event) {\n            return;\n        }\n\n        const { \n            name, \n            description, \n            category, \n            priority, \n            place, \n            date, \n            time, \n            // photo \n        } = event;\n        setTitle(name);\n        setDescription(description);\n        setDate(date);\n        setTime(time);\n        setPlace(place);\n        setCategory(category);\n        setPriority(priority);\n\n    }, [event]);\n\n    const handleInputChange = (e) => {\n        switch (e.target.name) {\n            case \"title\": \n                setTitle(e.target.value);\n                break;\n            case \"description\": \n                setDescription(e.target.value);\n                break;\n            case \"date\": \n                setDate(e.target.value);\n                break;\n            case \"time\": \n                setTime(e.target.value);\n                break;\n            case \"location\": \n                setPlace(e.target.value);\n                break;\n            case \"category\": \n                setCategory(e.target.value);\n                break;\n            case \"priority\": \n                setPriority(e.target.value);\n                break;\n            default: \n                return;\n        }\n    }\n\n    const toggleDataPicker = () => {\n        const form =  document.getElementById(\"form\");\n        const dateInput = form.querySelector(\"#date\");\n\n        if (showDatePicker) {\n            dateInput.blur();\n        } else {\n            dateInput.focus();\n        }\n\n        setShowDatePicker(prevState => !prevState)\n    }\n\n    const handleDateChange = (date) => {\n        setStartDate(date);\n    }\n\n    const handleSaveDate = () => {\n        const selectedDate = convertDateFormat(startDate);\n        setDate(selectedDate);\n        setShowDatePicker(false);\n    }\n\n    const handleCloseCalendar = () => {\n        setShowDatePicker(false);\n    }\n\n    const collectData = () => {\n        const newEvent = {\n            id: nanoid(),\n            name: title,\n            description,\n            category,\n            priority,\n            place,\n            date,\n            time,\n            photo: defaultImage\n        }\n\n        return newEvent;\n    }\n\n    const formValidation = () => {\n        const form =  document.getElementById(\"form\");\n        const inputs = form.querySelectorAll(\"input\");\n        \n        const validate = Array.from(inputs).every(i => i.value.trim());\n        console.log(validate);\n\n        if (!validate) {\n            inputs.forEach(function(input) {\n            // Check if the input is empty (no value entered)\n            if (!input.value.trim()) {\n                    input.setCustomValidity(\"This field is required.\");\n                } else {\n                    input.setCustomValidity(\"\");\n                }\n            });\n\n            return false;\n        }\n\n        return true;\n    }\n\n    const handleFormSubmit = (e) => {\n        e.preventDefault();\n\n        const validate = formValidation();\n\n        if (!validate) {\n            toast.error(\"Please fill out all the required fields!\");\n            return;\n        }\n\n        const newEvent = collectData();\n        console.log(newEvent);\n\n        toast.success(\"A new event has been created!\");\n\n        if (location.pathname === '/create') {\n            navigate('/');\n        }\n\n        if (location.pathname === '/edit') {\n            navigate('/event');\n        }\n    }\n\n    return (\n        <form className={css.form} id=\"form\" onSubmit={handleFormSubmit}>\n            <div className={css.container}>\n\n                <div className={css.enabled}>\n                    <label \n                        className={css.label} \n                        htmlFor=\"title\"\n                    >\n                        Title\n                    </label>\n                    <input \n                        className={css.input}\n                        type=\"text\"\n                        id=\"title\" \n                        name=\"title\" \n                        pattern=\"[A-Z][A-Za-z0-9 ]*\"\n                        value={title}\n                        onChange={handleInputChange}\n                    />\n                    <button \n                        type=\"button\" \n                        className={css.inputBtn} \n                        onClick={() => setTitle('')}\n                    >\n                        <MdClose style={{width: 18, height: 18}} />\n                    </button>\n                </div>\n                \n                <div className={css.enabled}>\n                    <label \n                        className={css.label}  \n                        htmlFor=\"description\"\n                    >\n                        Description\n                    </label>\n                    <textarea\n                        className={css.textarea} \n                        type=\"text\"\n                        id=\"description\" \n                        name=\"description\" \n                        value={description}\n                        onChange={handleInputChange}\n                    ></textarea>\n                    <button \n                        type=\"button\" \n                        className={css.inputBtn} \n                        onClick={() => setDescription('')}\n                    >\n                        <MdClose style={{width: 18, height: 18}} />\n                    </button>\n                </div>\n                \n                <div className={css.enabled} \n                    style={{position: \"relative\"}}\n                >\n                    <label \n                        className={css.label} \n                        htmlFor=\"date\"\n                    >\n                        Select date\n                    </label>\n                    <input \n                        className={css.input} \n                        type=\"text\"\n                        id=\"date\" \n                        name=\"date\" \n                        // pattern=\"/^\\d{2}\\.\\d{2}\\.\\d{4}$/\"\n                        placeholder=\"Select date\"\n                        value={date}\n                        onChange={handleInputChange}\n                        onClick={() => setShowDatePicker(true)}\n                        style={{caretColor: \"transparent\"}}\n                    />\n                    <button \n                        type=\"button\" \n                        className={css.inputBtn} \n                        style={{width: \"90%\", justifyContent: \"right\"}}\n                        onClick={toggleDataPicker}\n                    >\n                        {showDatePicker \n                            ? <MdKeyboardArrowUp style={{width: 24, height: 24}}/>\n                            : <MdKeyboardArrowDown style={{width: 24, height: 24}} />\n                        }\n                    </button>\n                    \n                    {showDatePicker && \n                        <div className={css.calendar}>\n                            <DatePicker \n                                startDate={startDate}\n                                onSelect={handleDateChange}\n                                onClose={handleCloseCalendar}\n                                onSave={handleSaveDate}\n                            />\n                        </div>\n                    }\n                </div>\n\n                <div className={css.enabled}>\n                    <label \n                        className={css.label}  \n                        htmlFor=\"time\"\n                    >\n                        Select time\n                    </label>\n                    <input \n                        className={css.input} \n                        type=\"time\"\n                        id=\"time\" \n                        name=\"time\" \n                        value={time}\n                        onChange={handleInputChange}\n                    />\n                    <button \n                        type=\"button\" \n                        className={css.inputBtn} \n                        // onClick={() => setKeywords('')}\n                    >\n                        <MdKeyboardArrowDown style={{width: 24, height: 24}} />\n                    </button>\n                </div>\n\n                <div className={css.enabled}>\n                    <label \n                        className={css.label}  \n                        htmlFor=\"location\"\n                    >\n                        Location\n                    </label>\n                    <input \n                        className={css.input} \n                        type=\"text\"\n                        id=\"location\" \n                        name=\"location\" \n                        pattern=\"[A-Z][A-Za-z ]*\"\n                        value={place}\n                        onChange={handleInputChange}\n                    />\n                    <button \n                        type=\"button\" \n                        className={css.inputBtn} \n                        onClick={() => setPlace('')}\n                    >\n                        <MdClose style={{width: 18, height: 18}} />\n                    </button>\n                </div>\n                \n                {/* category - dropdown */}\n                <div className={css.disabled}>\n                    <label \n                        className={css.label} \n                        htmlFor=\"category\"\n                    >\n                        Category\n                    </label>\n                    <input \n                        className={css.input} \n                        type=\"text\"\n                        id=\"category\" \n                        name=\"category\" \n                        placeholder=\"Select category\"\n                        disabled\n                        value={category}\n                        onChange={handleInputChange}\n                    />\n                    <button \n                        type=\"button\" \n                        className={css.inputBtn} \n                        // onClick={() => setKeywords('')}\n                    >\n                        <MdKeyboardArrowDown style={{width: 24, height: 24}} />\n                    </button>\n                </div>\n\n                {/* image */}\n                <div className={css.disabled}>\n                    <label \n                        className={css.label} \n                        htmlFor=\"image\"\n                    >\n                        Add picture\n                    </label>\n                    <input \n                        className={css.input} \n                        type=\"file\"\n                        id=\"image\" \n                        name=\"image\" \n                        disabled\n                    />\n                    {/* div to overlap over the file input */}\n                    <div className={css.fakeInput}>\n                        <span className={css.fakePlaceholder}>Select image</span>\n                    </div>\n                    <button \n                        type=\"button\" \n                        className={css.inputBtn} \n                        // onClick={() => setImage('')}\n                    >\n                        <MdClose style={{width: 18, height: 18}} />\n                    </button>\n                </div>\n\n                {/* priority - dropdown*/}\n                <div className={css.disabled}>\n                    <label \n                        className={css.label} \n                        htmlFor=\"priority\"\n                    >\n                        Priority\n                    </label>\n                    <input \n                        className={css.input} \n                        type=\"text\"\n                        id=\"priority\" \n                        name=\"priority\" \n                        placeholder=\"Select priority\"\n                        disabled\n                        value={priority}\n                        onChange={handleInputChange}\n                    />\n                    <button \n                        type=\"button\" \n                        className={css.inputBtn} \n                        // onClick={() => setKeywords('')}\n                    >\n                        <MdKeyboardArrowDown style={{width: 24, height: 24}} />\n                    </button>\n                </div>\n            </div>\n        \n            {/* adjust text depending on the location */}\n            <button type=\"submit\" className={css.button}>\n                {\n                    location.pathname === '/create'\n                    ? \"Add event\"\n                    : \"Save\"\n                }\n            </button>\n        </form>\n    )\n}","export const convertDateFormat = (inputDate) => {  \n    // Parse the input date string\n    const parsedDate = new Date(inputDate);\n  \n    // Get the day, month, and year from the parsed date\n    const day = parsedDate.getDate().toString().padStart(2, '0');\n    const month = (parsedDate.getMonth() + 1).toString().padStart(2, '0');\n    const year = parsedDate.getFullYear();\n\n    // Format the date as dd.mm.yyyy\n    const formattedDate = `${day}.${month}.${year}`;\n\n    return formattedDate;\n  }","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"Main_main__QhrKC\"};","import css from \"./Main.module.css\"\n\nexport const Main = ({ children }) => {\n    return (\n        <main className={css.main}>\n            {children}\n        </main>\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"PageTitle_title__8ZgTZ\"};","import css from \"./PageTitle.module.css\"\n\nexport const PageTitle = ({ title }) => {\n    return (\n        <h2 className={css.title}>\n            {title}\n        </h2>\n    )\n}","import { Main } from \"components/Main/Main\";\nimport { PageTitle } from \"components/PageTitle/PageTitle\";\nimport { BackButton } from \"components/BackButton/BackButton\";\nimport { EventForm } from \"components/EventForm/EventForm\";\n\nconst Create = () => {\n    return (\n        <Main>\n            <BackButton />\n            <PageTitle title=\"Create new event\" />\n            <EventForm />  \n        </Main>\n    )\n}\n\nexport default Create;"],"names":["BackButton","_location$state$from","_location$state","location","useLocation","_jsx","Link","to","state","from","style","width","children","_jsxs","className","css","type","AiOutlineArrowLeft","height","DatePicker","_ref","startDate","onSelect","onClose","onSave","classNames","caption","caption_label","nav","nav_button","nav_icon","table","head","head_cell","row","cell","day","day_today","day_selected","_Fragment","DayPicker","selected","mode","onClick","EventForm","event","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","title","setTitle","_useState3","_useState4","description","setDescription","_useState5","_useState6","date","setDate","_useState7","_useState8","time","setTime","_useState9","_useState10","place","setPlace","_useState11","_useState12","category","setCategory","_useState13","_useState14","priority","setPriority","_useState15","Date","_useState16","setStartDate","_useState17","_useState18","showDatePicker","setShowDatePicker","useEffect","name","handleInputChange","e","target","value","id","onSubmit","preventDefault","inputs","document","getElementById","querySelectorAll","validate","Array","every","i","trim","console","log","forEach","input","setCustomValidity","formValidation","newEvent","nanoid","photo","toast","pathname","htmlFor","pattern","onChange","MdClose","position","placeholder","caretColor","justifyContent","dateInput","querySelector","blur","focus","prevState","MdKeyboardArrowUp","MdKeyboardArrowDown","selectedDate","inputDate","parsedDate","getDate","toString","padStart","month","getMonth","year","getFullYear","concat","convertDateFormat","disabled","Main","PageTitle"],"sourceRoot":""}